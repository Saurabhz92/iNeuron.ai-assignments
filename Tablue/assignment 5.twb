<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20204.22.0420.0846                               -->
<workbook original-version='18.1' source-build='2020.4.17 (20204.22.0420.0846)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <SpecificWebTargetsForActions />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Data' inline='true' name='federated.11hr2vx034i2ig1cl53ie0orxdp5' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Data' name='excel-direct.1dta7ps0zz2lqk172dgw81s29l14'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Shree/Desktop/TaBlue/Assignment-5/Data.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1dta7ps0zz2lqk172dgw81s29l14' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='integer' name='Postal Code' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='string' name='Country' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Market' ordinal='13' />
            <column datatype='string' name='Product ID' ordinal='14' />
            <column datatype='string' name='Category' ordinal='15' />
            <column datatype='string' name='Sub-Category' ordinal='16' />
            <column datatype='string' name='Product Name' ordinal='17' />
            <column datatype='real' name='Sales' ordinal='18' />
            <column datatype='integer' name='Quantity' ordinal='19' />
            <column datatype='real' name='Discount' ordinal='20' />
            <column datatype='real' name='Profit' ordinal='21' />
            <column datatype='real' name='Shipping Cost' ordinal='22' />
            <column datatype='string' name='Order Priority' ordinal='23' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.1dta7ps0zz2lqk172dgw81s29l14' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='6'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='integer' name='Postal Code' ordinal='8' />
              <column datatype='string' name='City' ordinal='9' />
              <column datatype='string' name='State' ordinal='10' />
              <column datatype='string' name='Country' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
              <column datatype='string' name='Market' ordinal='13' />
              <column datatype='string' name='Product ID' ordinal='14' />
              <column datatype='string' name='Category' ordinal='15' />
              <column datatype='string' name='Sub-Category' ordinal='16' />
              <column datatype='string' name='Product Name' ordinal='17' />
              <column datatype='real' name='Sales' ordinal='18' />
              <column datatype='integer' name='Quantity' ordinal='19' />
              <column datatype='real' name='Discount' ordinal='20' />
              <column datatype='real' name='Profit' ordinal='21' />
              <column datatype='real' name='Shipping Cost' ordinal='22' />
              <column datatype='string' name='Order Priority' ordinal='23' />
            </columns>
          </relation>
          <relation connection='excel-direct.1dta7ps0zz2lqk172dgw81s29l14' name='People' table='[People$]' type='table'>
            <columns gridOrigin='A1:B25:no:A1:B25:0' header='yes' outcome='2'>
              <column datatype='string' name='Person' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
            </columns>
          </relation>
          <relation connection='excel-direct.1dta7ps0zz2lqk172dgw81s29l14' name='Returns' table='[Returns$]' type='table'>
            <columns gridOrigin='A1:C1080:no:A1:C1080:0' header='yes' outcome='6'>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='string' name='Region' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Category]' value='[Orders].[Category]' />
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Country]' value='[Orders].[Country]' />
          <map key='[Customer ID]' value='[Orders].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[Market]' value='[Orders].[Market]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID (Returns)]' value='[Returns].[Order ID]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[Order Priority]' value='[Orders].[Order Priority]' />
          <map key='[Person]' value='[People].[Person]' />
          <map key='[Postal Code]' value='[Orders].[Postal Code]' />
          <map key='[Product ID]' value='[Orders].[Product ID]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Profit]' value='[Orders].[Profit]' />
          <map key='[Quantity]' value='[Orders].[Quantity]' />
          <map key='[Region (People)]' value='[People].[Region]' />
          <map key='[Region (Returns)]' value='[Returns].[Region]' />
          <map key='[Region]' value='[Orders].[Region]' />
          <map key='[Returned]' value='[Returns].[Returned]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Sales]' value='[Orders].[Sales]' />
          <map key='[Segment]' value='[Orders].[Segment]' />
          <map key='[Ship Date]' value='[Orders].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[Shipping Cost]' value='[Orders].[Shipping Cost]' />
          <map key='[State]' value='[Orders].[State]' />
          <map key='[Sub-Category]' value='[Orders].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:X10001:no:A1:X10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[People]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B25:no:A1:B25:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Returns]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C1080:no:A1:C1080:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_71467CFCEEEC489BABCA87AD44D08A02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_71467CFCEEEC489BABCA87AD44D08A02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_71467CFCEEEC489BABCA87AD44D08A02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_71467CFCEEEC489BABCA87AD44D08A02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_71467CFCEEEC489BABCA87AD44D08A02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_71467CFCEEEC489BABCA87AD44D08A02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_71467CFCEEEC489BABCA87AD44D08A02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_71467CFCEEEC489BABCA87AD44D08A02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_71467CFCEEEC489BABCA87AD44D08A02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_71467CFCEEEC489BABCA87AD44D08A02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_71467CFCEEEC489BABCA87AD44D08A02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_71467CFCEEEC489BABCA87AD44D08A02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_71467CFCEEEC489BABCA87AD44D08A02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_71467CFCEEEC489BABCA87AD44D08A02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_71467CFCEEEC489BABCA87AD44D08A02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_71467CFCEEEC489BABCA87AD44D08A02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_71467CFCEEEC489BABCA87AD44D08A02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_71467CFCEEEC489BABCA87AD44D08A02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_71467CFCEEEC489BABCA87AD44D08A02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_71467CFCEEEC489BABCA87AD44D08A02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_71467CFCEEEC489BABCA87AD44D08A02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_71467CFCEEEC489BABCA87AD44D08A02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_71467CFCEEEC489BABCA87AD44D08A02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_71467CFCEEEC489BABCA87AD44D08A02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Person</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Person]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Person</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[People_E48EB00B82504040BA4B6385A148D5AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region (People)]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[People_E48EB00B82504040BA4B6385A148D5AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_4EACE09DE2E445A68D7A4C8FB2905478]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (Returns)]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_4EACE09DE2E445A68D7A4C8FB2905478]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region (Returns)]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_4EACE09DE2E445A68D7A4C8FB2905478]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_71467CFCEEEC489BABCA87AD44D08A02]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='People' datatype='table' name='[__tableau_internal_object_id__].[People_E48EB00B82504040BA4B6385A148D5AD]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Returns' datatype='table' name='[__tableau_internal_object_id__].[Returns_4EACE09DE2E445A68D7A4C8FB2905478]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_71467CFCEEEC489BABCA87AD44D08A02'>
            <properties context=''>
              <relation connection='excel-direct.1dta7ps0zz2lqk172dgw81s29l14' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='integer' name='Postal Code' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='string' name='Country' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Market' ordinal='13' />
                  <column datatype='string' name='Product ID' ordinal='14' />
                  <column datatype='string' name='Category' ordinal='15' />
                  <column datatype='string' name='Sub-Category' ordinal='16' />
                  <column datatype='string' name='Product Name' ordinal='17' />
                  <column datatype='real' name='Sales' ordinal='18' />
                  <column datatype='integer' name='Quantity' ordinal='19' />
                  <column datatype='real' name='Discount' ordinal='20' />
                  <column datatype='real' name='Profit' ordinal='21' />
                  <column datatype='real' name='Shipping Cost' ordinal='22' />
                  <column datatype='string' name='Order Priority' ordinal='23' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='People' id='People_E48EB00B82504040BA4B6385A148D5AD'>
            <properties context=''>
              <relation connection='excel-direct.1dta7ps0zz2lqk172dgw81s29l14' name='People' table='[People$]' type='table'>
                <columns gridOrigin='A1:B25:no:A1:B25:0' header='yes' outcome='2'>
                  <column datatype='string' name='Person' ordinal='0' />
                  <column datatype='string' name='Region' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Returns' id='Returns_4EACE09DE2E445A68D7A4C8FB2905478'>
            <properties context=''>
              <relation connection='excel-direct.1dta7ps0zz2lqk172dgw81s29l14' name='Returns' table='[Returns$]' type='table'>
                <columns gridOrigin='A1:C1080:no:A1:C1080:0' header='yes' outcome='6'>
                  <column datatype='string' name='Returned' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='string' name='Region' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Region]' />
              <expression op='[Region (People)]' />
            </expression>
            <first-end-point object-id='Orders_71467CFCEEEC489BABCA87AD44D08A02' />
            <second-end-point object-id='People_E48EB00B82504040BA4B6385A148D5AD' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Region]' />
              <expression op='[Region (Returns)]' />
            </expression>
            <first-end-point object-id='Orders_71467CFCEEEC489BABCA87AD44D08A02' />
            <second-end-point object-id='Returns_4EACE09DE2E445A68D7A4C8FB2905478' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='countries' name='[Action1]'>
      <activation type='on-hover' />
      <source dashboard='pridiction Dashboard 1' type='sheet' />
      <link caption='' expression='https://en.wikipedia.org/wiki/&lt;[Country]&gt;'>
        <url-action-type>browser</url-action-type>
      </link>
    </action>
    <datasources>
      <datasource caption='Data' name='federated.11hr2vx034i2ig1cl53ie0orxdp5' />
    </datasources>
    <datasource-dependencies datasource='federated.11hr2vx034i2ig1cl53ie0orxdp5'>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name=' top 10 countries'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data' name='federated.11hr2vx034i2ig1cl53ie0orxdp5' />
          </datasources>
          <datasource-dependencies datasource='federated.11hr2vx034i2ig1cl53ie0orxdp5'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='Count' name='[cnt:Category:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Returned]' derivation='Count' name='[cnt:Returned:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11hr2vx034i2ig1cl53ie0orxdp5].[none:Country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Category])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Country:nk]' member='%null%' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Afghanistan&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Albania&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Algeria&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Angola&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Argentina&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Armenia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Australia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Austria&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Azerbaijan&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bahrain&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bangladesh&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Barbados&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belarus&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belgium&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belize&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Benin&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bhutan&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bolivia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Botswana&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Brazil&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bulgaria&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Burkina Faso&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Burundi&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cambodia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cameroon&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Canada&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Central African Republic&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Chad&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Chile&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;China&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Colombia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Costa Rica&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cote d&apos;Ivoire&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Croatia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cuba&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cyprus&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Czech Republic&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Democratic Republic of the Congo&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Denmark&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Djibouti&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Dominican Republic&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ecuador&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Egypt&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;El Salvador&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Equatorial Guinea&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Eritrea&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Estonia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ethiopia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Finland&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;France&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;French Guiana&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gabon&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Georgia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ghana&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Greece&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guadeloupe&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guatemala&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guinea&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guinea-Bissau&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guyana&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Haiti&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Honduras&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Hong Kong&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Hungary&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Indonesia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iran&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iraq&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ireland&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Israel&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Italy&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Jamaica&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Japan&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Jordan&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kazakhstan&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kenya&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kuwait&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kyrgyzstan&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Laos&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lebanon&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lesotho&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Liberia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Libya&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lithuania&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Luxembourg&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Macedonia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Madagascar&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malawi&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malaysia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mali&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Martinique&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mauritania&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mexico&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Moldova&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mongolia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Montenegro&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Morocco&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mozambique&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Myanmar (Burma)&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Namibia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nepal&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Netherlands&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;New Zealand&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nicaragua&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Niger&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nigeria&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Norway&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Oman&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Pakistan&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Panama&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Papua New Guinea&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Paraguay&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Peru&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Philippines&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Poland&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Portugal&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Qatar&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Republic of the Congo&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Romania&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Russia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Rwanda&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Saudi Arabia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Senegal&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Serbia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sierra Leone&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Singapore&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Slovakia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Slovenia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Somalia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Africa&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Korea&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Sudan&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Spain&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sri Lanka&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sudan&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Suriname&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Swaziland&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sweden&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Switzerland&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Syria&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Taiwan&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tajikistan&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tanzania&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Thailand&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;The Gambia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Togo&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Trinidad and Tobago&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tunisia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Turkey&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Turkmenistan&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uganda&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ukraine&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Arab Emirates&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uruguay&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uzbekistan&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Venezuela&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Vietnam&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Western Sahara&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Yemen&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Zambia&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Zimbabwe&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.11hr2vx034i2ig1cl53ie0orxdp5].[none:Country:nk]' direction='DESC' using='[federated.11hr2vx034i2ig1cl53ie0orxdp5].[cnt:Category:qk]' />
          <slices>
            <column>[federated.11hr2vx034i2ig1cl53ie0orxdp5].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.11hr2vx034i2ig1cl53ie0orxdp5].[cnt:Returned:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.11hr2vx034i2ig1cl53ie0orxdp5].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11hr2vx034i2ig1cl53ie0orxdp5].[none:Country:nk]</rows>
        <cols>([federated.11hr2vx034i2ig1cl53ie0orxdp5].[cnt:Returned:qk] + [federated.11hr2vx034i2ig1cl53ie0orxdp5].[sum:Sales:qk])</cols>
      </table>
      <simple-id uuid='{6C43CAFB-5FF1-4274-AFFB-BC65F2180D66}' />
    </worksheet>
    <worksheet name='refund pridiction1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data' name='federated.11hr2vx034i2ig1cl53ie0orxdp5' />
          </datasources>
          <datasource-dependencies datasource='federated.11hr2vx034i2ig1cl53ie0orxdp5'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' forecast-column-base='[sum:Sales:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11hr2vx034i2ig1cl53ie0orxdp5].[none:Category:nk]'>
            <groupfilter from='&quot;Furniture&quot;' function='range' level='[none:Category:nk]' to='&quot;Technology&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.11hr2vx034i2ig1cl53ie0orxdp5].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11hr2vx034i2ig1cl53ie0orxdp5].[none:Category:nk]' />
              <color column='[federated.11hr2vx034i2ig1cl53ie0orxdp5].[none:Forecast Indicator:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.11hr2vx034i2ig1cl53ie0orxdp5].[none:Category:nk] * [federated.11hr2vx034i2ig1cl53ie0orxdp5].[fVal:sum:Sales:qk])</rows>
        <cols>[federated.11hr2vx034i2ig1cl53ie0orxdp5].[tmn:Order Date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{668F3E76-8644-4633-977F-A00D6696CAC4}' />
    </worksheet>
    <worksheet name='world map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data' name='federated.11hr2vx034i2ig1cl53ie0orxdp5' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.11hr2vx034i2ig1cl53ie0orxdp5'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Returned]' derivation='None' name='[none:Returned:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11hr2vx034i2ig1cl53ie0orxdp5].[none:Country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Category])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.11hr2vx034i2ig1cl53ie0orxdp5].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.11hr2vx034i2ig1cl53ie0orxdp5].[none:Country:nk]' />
              <lod column='[federated.11hr2vx034i2ig1cl53ie0orxdp5].[none:Country:nk]' />
              <geometry column='[federated.11hr2vx034i2ig1cl53ie0orxdp5].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.11hr2vx034i2ig1cl53ie0orxdp5].[none:Returned:nk] * [federated.11hr2vx034i2ig1cl53ie0orxdp5].[Latitude (generated)])</rows>
        <cols>[federated.11hr2vx034i2ig1cl53ie0orxdp5].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{4B7D7A90-86F5-40F4-AF46-FBEE02D2D2A2}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='pridiction Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='5' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='8' param='horz' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98000' id='4' w='82000' x='800' y='1000'>
              <zone h='58250' id='3' name=' top 10 countries' w='40200' x='1600' y='2000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='37750' id='10' name='refund pridiction1' w='80400' x='1600' y='60250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='58250' id='12' param='horz' w='40200' x='41800' y='2000'>
                <zone h='58250' id='13' name='world map' w='40200' x='41800' y='2000'>
                  <layout-cache minwidth='282' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='164' h='98000' id='7' is-fixed='true' param='vert' w='16400' x='82800' y='1000'>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='23000' id='11' name='refund pridiction1' pane-specification-id='0' param='[federated.11hr2vx034i2ig1cl53ie0orxdp5].[none:Category:nk]&#10;[federated.11hr2vx034i2ig1cl53ie0orxdp5].[none:Forecast Indicator:nk]' w='16400' x='82800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='35500' id='14' name='world map' pane-specification-id='0' param='[federated.11hr2vx034i2ig1cl53ie0orxdp5].[none:Country:nk]' w='16400' x='82800' y='24000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout name='Desktop' />
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1000' minheight='1000' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='22' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='21' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='58250' id='3' is-fixed='true' name=' top 10 countries' w='40200' x='1600' y='2000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='58250' id='13' is-fixed='true' name='world map' w='40200' x='41800' y='2000'>
                  <layout-cache minwidth='282' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='35500' id='14' name='world map' pane-specification-id='0' param='[federated.11hr2vx034i2ig1cl53ie0orxdp5].[none:Country:nk]' w='16400' x='82800' y='24000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37750' id='10' is-fixed='true' name='refund pridiction1' w='80400' x='1600' y='60250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='23000' id='11' name='refund pridiction1' pane-specification-id='0' param='[federated.11hr2vx034i2ig1cl53ie0orxdp5].[none:Category:nk]&#10;[federated.11hr2vx034i2ig1cl53ie0orxdp5].[none:Forecast Indicator:nk]' w='16400' x='82800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{08A4F0F6-26D8-4551-8FBB-DC047745A4B8}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name=' top 10 countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11hr2vx034i2ig1cl53ie0orxdp5].[none:Country:nk]</field>
            <field>[federated.11hr2vx034i2ig1cl53ie0orxdp5].[none:Returned:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D259D411-2E4C-4D25-B7B0-34769E61F861}' />
    </window>
    <window class='worksheet' maximized='true' name='world map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11hr2vx034i2ig1cl53ie0orxdp5].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11hr2vx034i2ig1cl53ie0orxdp5].[none:Country:nk]</field>
            <field>[federated.11hr2vx034i2ig1cl53ie0orxdp5].[none:Returned:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BB192A8A-89CB-43C9-AAF6-8B12C3ABA9E2}' />
    </window>
    <window class='worksheet' name='refund pridiction1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11hr2vx034i2ig1cl53ie0orxdp5].[none:Category:nk]&#10;[federated.11hr2vx034i2ig1cl53ie0orxdp5].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11hr2vx034i2ig1cl53ie0orxdp5].[none:Category:nk]</field>
            <field>[federated.11hr2vx034i2ig1cl53ie0orxdp5].[none:Forecast Indicator:nk]</field>
            <field>[federated.11hr2vx034i2ig1cl53ie0orxdp5].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E890E74B-4958-4C5C-AC68-C982D579831A}' />
    </window>
    <window class='dashboard' name='pridiction Dashboard 1'>
      <viewpoints>
        <viewpoint name=' top 10 countries' />
        <viewpoint name='refund pridiction1'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.11hr2vx034i2ig1cl53ie0orxdp5].[none:Category:nk]</field>
              <field>[federated.11hr2vx034i2ig1cl53ie0orxdp5].[none:Forecast Indicator:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='world map'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.11hr2vx034i2ig1cl53ie0orxdp5].[none:Country:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='7' />
      <simple-id uuid='{541F9B93-3FC2-457C-B316-4B741471D99C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name=' top 10 countries' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='pridiction Dashboard 1' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='refund pridiction1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='world map' width='192'>
      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
      eNhq+P8ByDNvZz8YP+0AAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
